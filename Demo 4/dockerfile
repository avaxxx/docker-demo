# FROM microsoft/aspnetcore-build:lts
# COPY . /app
# WORKDIR /app
# RUN ["dotnet", "restore"]
# RUN ["dotnet", "build"]
# EXPOSE 80/tcp
# RUN chmod +x ./entrypoint.sh
# CMD /bin/bash ./entrypoint.sh

FROM microsoft/aspnetcore-build:2.0.0 AS build-env
WORKDIR /app

# copy csproj and restore as distinct layers
COPY src/*.csproj ./
RUN dotnet restore

# copy everything else and build
COPY src/ ./
RUN dotnet publish -c Release -o out


# build runtime image
FROM microsoft/aspnetcore:2.0.0
WORKDIR /app
COPY --from=build-env /app/out .

RUN apt-get update

RUN  apt-get install curl gnupg apt-transport-https -y

RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -

RUN  sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-debian-stretch-prod stretch main" > /etc/apt/sources.list.d/microsoft.list'

RUN  apt-get update

RUN  apt-get install -y powershell

HEALTHCHECK --interval=5s \
CMD powershell -command \
    'try { \
    $response = iwr http://localhost/api/healthcheck -UseBasicParsing; \
    if ($response.StatusCode -eq 200) { return 0} \
    else {return 1}; \
    } catch { return 1 }'

ENTRYPOINT ["dotnet", "HelloWebApi.dll"]

# FROM microsoft/aspnetcore-build:2.0 

# COPY src/ /app

# WORKDIR /app

# RUN ["dotnet", "restore"]

# RUN ["dotnet", "build"]

# COPY entrypoint.sh /app/entrypoint.sh

# RUN apt-get update && apt-get install -y dos2unix

# RUN dos2unix /app/entrypoint.sh && apt-get --purge remove -y dos2unix && rm -rf /var/lib/apt/lists/*

# RUN chmod +x ./entrypoint.sh

# CMD /bin/bash ./entrypoint.sh